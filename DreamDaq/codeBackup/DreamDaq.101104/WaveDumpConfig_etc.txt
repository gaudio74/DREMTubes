# ****************************************************************
# WaveDump Configuration File
# ****************************************************************

# Open Device
OPEN PCI 0 0 00320000
# OPEN USB 0 0 32100000

CHANNEL_ENABLE 0F

# GNUPlot path
GNUPLOT_PATH "/usr/bin/"

SAVE_CH_HEADER

#BINARY_OUTPUT_FILE

# ****************************************************************
# Generic VME Write to a register of the board
# Syntax: WRITE_REGISTER  REG_ADDR  REG_DATA
# where REG_ADDR is the 16 bit address offset (Hex) and
# REG_DATA is the 32 bit register value to set (Hex).
# ****************************************************************
# ----------------------------------------------------------------
# Reset the board
# ----------------------------------------------------------------
#WRITE_REGISTER EF24 0


# ----------------------------------------------------------------
# BLT Event Number
# ----------------------------------------------------------------
WRITE_REGISTER EF1C 1

# ----------------------------------------------------------------
# Trigger Source Enable Mask
# ----------------------------------------------------------------
#WRITE_REGISTER 810C 80000003  # Software + External 
WRITE_REGISTER 810C C0000003  # Software + External + GR0/1 auto trigger
#WRITE_REGISTER 810C 80000003  # Software            + GR0/1 auto trigger
#WRITE_REGISTER 810C 40000003  # External + GR0/1 auto trigger

# ----------------------------------------------------------------
# Front Panel Out Enable Mask (for BUSY)
# ----------------------------------------------------------------
WRITE_REGISTER 8110 00000003  #  GR0,GR1 auto trigger
#WRITE_REGISTER 8110 00000000  #  GR0,GR1 auto trigger


# ----------------------------------------------------------------
# Channel Configuration Register
# Bit 1  = Trigger Overlapped (Must be 0)
# Bit 3  = Test Waveform
# Bit 4  = Sequential Readout (Must be 1)
# Bit 6  = Local Trigger Polarity (0=Rising, 1=Falling)
# Bit 8  = Individual Trigger (Must be 1)
# Bit 11 = Abilitazione TR in readout 
# Bit 12 = Abilitazione TR come Trigger 
# ----------------------------------------------------------------

WRITE_REGISTER 8000  110   #   Sequential + INDIVIDUAL TRG

WRITE_REGISTER 8004  800   #  Enable TR nel readout
#WRITE_REGISTER 8008  800   #  Disable TR nel readout


WRITE_REGISTER 8004  1000    #  Enabled EXTERNAL TR
#WRITE_REGISTER 8008  1000    #  Disabled EXTERNAL TR


#TRG NIM Setting
#STRG0_1
WRITE_REGISTER 10A0 77300    # STRG about 1.12V (NIM)
WRITE_REGISTER 10A0 51000    # OFFSETTRG= 150mV per input NIM 		

#TRG TTL Setting
#STRG0_1
#WRITE_REGISTER 10A0 77300    # STRG about 1.12V (TTL)
#WRITE_REGISTER 10A0 54000    # OFFSETTRG per input TTL

#TRG AC Setting
#STRG0_1
#WRITE_REGISTER 10A0 76d00    # STRG about 1.05V 
#WRITE_REGISTER 10A0 51000    # OFFSETTRG= 150mV per input NIM 


# ----------------------------------------------------------------
# Post Trigger (x8,5nsec)
# ----------------------------------------------------------------
# was 8 - now optimized for BGO matrix 29OCT2010
WRITE_REGISTER 8114 0x14



#CHANNEL OFFSET

WRITE_REGISTER 1098 F6800     # DAC GROUP0 OFFSET all ch
WRITE_REGISTER 1198 F6800     # DAC GROUP1 OFFSET all ch

# Corrisponde a 3000 di base
#WRITE_REGISTER 1098 F7500     # DAC GROUP0 OFFSET all ch
#WRITE_REGISTER 1098 06000     # DAC GROUP0 OFFSET ch0
#WRITE_REGISTER 1098 16000     # DAC GROUP0 OFFSET ch1
#WRITE_REGISTER 1098 26000     # DAC GROUP0 OFFSET ch2
#WRITE_REGISTER 1098 36000     # DAC GROUP0 OFFSET ch3
#WRITE_REGISTER 1098 7A000     # DAC GROUP0 OFFSET ch7

# Corrisponde a 4000 di base
#WRITE_REGISTER 1198 F5950     # DAC GROUP1 OFFSET all ch
#WRITE_REGISTER 1198 0A000     # DAC GROUP1 OFFSET ch0
#WRITE_REGISTER 1198 1A000     # DAC GROUP1 OFFSET ch1
#WRITE_REGISTER 1198 7A000     # DAC GROUP1 OFFSET ch7



# Interrupt configuration: 
# syntax: USE_INTERRUPT level status_id event_number mode mask timeout
# where :
#	level : the interrupt level (meaningful for VME devices only )
#	status_id : the status id (meaningful for VME devices only )
#	event_number : the number of events to wait for (>= 1)
#	mode : 0 = RORA , 1 = ROAK
#	mask : wait mask (hex format) (meaningful for VME devices only )
#	timeout : wait timeout (msec)

# USE_INTERRUPT 0 0 1 0 ff 4000
